---
  - name: Ensure group is present
    group: name="{{ inf_group }}" state=present

  - name: Create user to be used by dameon processes
    user: name="{{ elasticsearch_user }}" comment="Nanotech Logging Services" group="{{ inf_group }}"

  - name:  Check for java jdk
    command: rpm -q jdk
    register: rpm_check
    failed_when: rpm_check.rc > 1

  - name: Copy java jdk
    copy: src="/usr/nano/build/{{ ansible_environment }}/jdk/{{ jdk_rpm }}" dest="/tmp/{{ jdk_rpm }}"
    when: rpm_check.rc == 1

  - name: Install java jdk
    command: rpm -i "/tmp/{{ jdk_rpm }}"
    when: rpm_check.rc == 1

  - name: Create directory structure (app, log, data)
    file: path={{ item }} state=directory group={{ inf_group }} owner={{ elasticsearch_user }}
    with_items:
      - "{{ inf_app_path }}/elasticsearch"
      - "{{ inf_log_path }}/elasticsearch"
      - "{{ inf_data_path }}/elasticsearch"

  - name: Check for current version
    command: "{{ inf_app_path }}/elasticsearch/current/bin/elasticsearch -v"
    register: vers_check
    failed_when: vers_check.rc > 2

  - name: Copy and extract elasticsearch
    unarchive: src="/usr/nano/build/{{ ansible_environment }}/elasticsearch/elasticsearch.tar.gz" dest="{{ inf_app_path }}/elasticsearch" owner="{{ elasticsearch_user }}" group="{{ inf_group }}"
    when: vers_check.rc > 0

  - name: Add bootstrap program and config
    copy: src="{{ item.src }}" dest={{ item.dest }} mode=777
    with_items:
      - { src: "/usr/nano/build/{{ ansible_environment }}/bootstrap/bootstrap", dest: "/tmp/bootstrap" }
      - { src: "bs_elasticsearch.conf", dest: "/tmp/bs_elasticsearch.conf" }

  - name: Add bootstrap tmpl file
    template: src=bs_elasticsearch.tmpl dest=/tmp/bs_elasticsearch.tmpl

  - name: Run bootstrap process
    command: /tmp/bootstrap -conf=/tmp/bs_elasticsearch.conf -tmpl=/tmp/bs_elasticsearch.tmpl

  - name: Add consul-template ctmpl file
    copy: src=elasticsearch.ctmpl dest=/etc/consul-template/ctmpl/elasticsearch.ctmpl

  - name: Add files (consul-template conf, consul conf, init.d)
    template: src={{ item.src }} dest={{ item.dest }} mode=744
    with_items:
      - { src: "consul-template.conf", dest: "/etc/consul-template/conf.d/elasticsearch" }
      - { src: "elasticsearch.json", dest: "/etc/consul.d/elasticsearch.json" }
      - { src: "elasticsearch.init.d", dest: "/etc/init.d/elasticsearch" }

  - name: Add elasticsearch status utility
    copy: src="/usr/nano/build/{{ ansible_environment }}/status-utils/es_status" dest="{{ inf_app_path }}/elasticsearch/current/bin/es_status" mode=777

  - name: Install elasticsearch as service
    command: /sbin/insserv -f elasticsearch

  - name: Refresh consul-template
    shell: 'kill -1 $(cat /var/run/consul-template.pid)'

  - name: Refresh consul
    shell: 'kill -1 $(cat /var/run/consul.pid)'

#  - name: Start elasticsearch service
#    service: name=elasticsearch state=restarted
